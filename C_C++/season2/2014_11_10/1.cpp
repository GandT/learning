#include <stdio.h>#include <iostream>#include <math.h>using namespace std;#define rfor(X)		for(int r = 0;r < (X);++r)#define ifor(X)		for(int i = 0;i < (X);++i)#define jfor(X)		for(int j = 0;i < (X);++j)int edge;				//エッジの数int query;				//合計質問数int DisjointSet[10000];	//各エッジ親番号int root(int n);	//根を求める/*****メイン関数*****/int main(){	//エッジの数を受け取る（使わない）	cin >> edge;		//合計質問数を受け取る	cin >> query;		//親番号の設定	ifor(10000)DisjointSet[i] = i;		//命令内容受け取り用変数	int q;	int first,second;		//質問数分ループ	rfor(query){				//命令内容を受け取る		cin >> q;				//エッジ番号を受け取る		cin >> first;		cin >> second;				//命令により分岐		if(q){				//1:same			if( root(first) == root(second) )				cout << 1 << endl;		//同じ親			else				cout << 0 << endl;		//違う親		}else{				//0:unite			DisjointSet[root(second)] = DisjointSet[root(first)];		//secondの根をfirstの根の下につなげる		}	}}/*****根を求めつつ最適化*****/int root(int n){	if(n == DisjointSet[n])		return n;	//それ自体が根であればそれを返す	else		return DisjointSet[n] = root(DisjointSet[n]);	//再起処理で親の親を求めつつnを根直属にする	}