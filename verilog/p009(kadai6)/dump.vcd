$date
	Thu May 26 16:25:05 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module multest $end
$var wire 17 ! O [16:0] $end
$var wire 1 " fin $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 17 % OR [16:0] $end
$var reg 1 & ck $end
$var reg 4 ' st [3:0] $end
$var reg 1 ( start $end
$scope module MUL $end
$var wire 8 ) A [7:0] $end
$var wire 8 * B [7:0] $end
$var wire 1 + ck $end
$var wire 1 , start $end
$var reg 8 - AIN [7:0] $end
$var reg 8 . BIN [7:0] $end
$var reg 17 / O [16:0] $end
$var reg 1 0 fin $end
$var reg 4 1 st [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
x0
bx /
bx .
bx -
0,
0+
bx *
bx )
0(
b0 '
0&
bx %
bx $
bx #
x"
bx !
$end
#10
1&
1+
#20
b1 '
1(
1,
0&
0+
#30
b0 1
b0 /
b0 !
00
0"
1&
1+
#40
b10 '
0(
0,
0&
0+
#50
b1 1
bx /
bx !
1&
1+
#60
b11 '
0&
0+
#70
b10 1
1&
1+
#80
b100 '
0&
0+
#90
b11 1
1&
1+
#100
b101 '
0&
0+
#110
b100 1
1&
1+
#120
b110 '
0&
0+
#130
b101 1
1&
1+
#140
b111 '
0&
0+
#150
b110 1
1&
1+
#160
b1000 '
0&
0+
#170
b111 1
1&
1+
#180
b1001 '
0&
0+
#190
b1000 1
10
1"
1&
1+
#200
b1010 '
b10000001 $
b10000001 *
b100100 #
b100100 )
0&
0+
#210
00
0"
b1 1
1&
1+
#220
b1011 '
0&
0+
#230
b10 1
1&
1+
#240
b1100 '
0&
0+
#250
b11 1
1&
1+
#260
b1101 '
0&
0+
#270
b100 1
1&
1+
#280
b1110 '
0&
0+
#290
b101 1
1&
1+
#300
b1111 '
0&
0+
#310
b110 1
1&
1+
#320
b0 '
0&
0+
#330
b111 1
1&
1+
#340
b1 '
1(
1,
0&
0+
#350
b0 1
b0 /
b0 !
b10000001 .
b100100 -
1&
1+
#360
b10 '
0(
0,
0&
0+
#370
b1 1
b100100 /
b100100 !
1&
1+
#380
b11 '
0&
0+
#390
b10 1
b1001000 /
b1001000 !
1&
1+
#400
b100 '
0&
0+
#410
b11 1
b10010000 /
b10010000 !
1&
1+
#420
b101 '
0&
0+
#430
b100 1
b100100000 /
b100100000 !
1&
1+
#440
b110 '
0&
0+
#450
b101 1
b1001000000 /
b1001000000 !
1&
1+
#460
b111 '
0&
0+
#470
b110 1
b10010000000 /
b10010000000 !
1&
1+
#480
b1000 '
0&
0+
#490
b111 1
b100100000000 /
b100100000000 !
1&
1+
#500
b1001 '
0&
0+
#510
b1000 1
10
1"
b1001000100100 /
b1001000100100 !
1&
1+
#520
b1010 '
b1001000100100 %
b1100011 $
b1100011 *
b1001 #
b1001 )
0&
0+
#530
00
0"
b1 1
1&
1+
#540
b1011 '
0&
0+
#550
b10 1
b10010001001000 /
b10010001001000 !
1&
1+
#560
b1100 '
0&
0+
#570
b11 1
b100100010010000 /
b100100010010000 !
1&
1+
#580
b1101 '
0&
0+
#590
b100 1
b1001000100100000 /
b1001000100100000 !
1&
1+
#600
b1110 '
0&
0+
#610
b101 1
b10010001001000000 /
b10010001001000000 !
1&
1+
#620
b1111 '
0&
0+
#630
b110 1
b100010010000000 /
b100010010000000 !
1&
1+
#640
b0 '
0&
0+
#650
b111 1
b1000100100000000 /
b1000100100000000 !
1&
1+
#660
b1 '
1(
1,
0&
0+
#670
b0 1
b0 /
b0 !
b1100011 .
b1001 -
1&
1+
#680
b10 '
0(
0,
0&
0+
#690
b1 1
1&
1+
#700
b11 '
0&
0+
#710
b10 1
b1001 /
b1001 !
1&
1+
#720
b100 '
0&
0+
#730
b11 1
b11011 /
b11011 !
1&
1+
#740
b101 '
0&
0+
#750
b100 1
b110110 /
b110110 !
1&
1+
#760
b110 '
0&
0+
#770
b101 1
b1101100 /
b1101100 !
1&
1+
#780
b111 '
0&
0+
#790
b110 1
b11011000 /
b11011000 !
1&
1+
#800
b1000 '
0&
0+
#810
b111 1
b110111001 /
b110111001 !
1&
1+
#820
b1001 '
0&
0+
#830
b1000 1
10
1"
b1101111011 /
b1101111011 !
1&
1+
#840
b1010 '
b1101111011 %
b10001101 $
b10001101 *
b1101 #
b1101 )
0&
0+
#850
00
0"
b1 1
1&
1+
#860
b1011 '
0&
0+
#870
b10 1
b11011111111 /
b11011111111 !
1&
1+
#880
b1100 '
0&
0+
#890
b11 1
b111000000111 /
b111000000111 !
1&
1+
#900
b1101 '
0&
0+
#910
b100 1
b1110000001110 /
b1110000001110 !
1&
1+
#920
b1110 '
0&
0+
#930
b101 1
b11100000011100 /
b11100000011100 !
1&
1+
#940
b1111 '
0&
0+
#950
b110 1
b111000000111000 /
b111000000111000 !
1&
1+
#960
b0 '
0&
0+
#970
b111 1
b1110000001111001 /
b1110000001111001 !
1&
1+
#980
b1 '
1(
1,
0&
0+
#990
b0 1
b0 /
b0 !
b10001101 .
b1101 -
1&
1+
#1000
b10 '
0(
0,
0&
0+
